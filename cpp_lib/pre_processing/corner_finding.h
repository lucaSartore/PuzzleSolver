#ifndef PROCESSING_CORNER_FINDING_H
#define PROCESSING_CORNER_FINDING_H

#define DEFAULT_PPI 1200

#include <iostream>
#include <opencv2/opencv.hpp>


/// this function read all the files in input path, (the file has to be generated by the `split_pieces_into_single_images` function
/// and you may not change the name or extension!
/// it then save a txt file with the coordinates of the pieces in the same directory
/// you can specify the number of cores you want to use, if tou put 0 it will be detected automatically
void find_corners(const std::string& path, int number_of_pieces, int ppi = DEFAULT_PPI, int number_of_cores = 0, bool enable_image_view = false);

/// take a path where the results have been saved using the function ``find_corners` and convert them to a json file
/// that will be be saved in the output path
void convert_coordinates_to_json(const std::string& input_path, int number_of_pieces, const std::string& output_path);


/// this function take the input images, and the coordinates on that images and then create the images
/// of the 4 sides, intended to be used to train a model
void export_sides_result(const std::string& input_images_path,const std::string& input_coordinates_path,const std::string& output_path, int number_of_pieces);


#endif //PROCESSING_CORNER_FINDING_H
